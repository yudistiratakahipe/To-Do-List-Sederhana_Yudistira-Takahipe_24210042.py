import json
import os

FILE_NAME = "todo_data.json"

def load_tasks():
    if not os.path.exists(FILE_NAME):
        return []
    with open(FILE_NAME, "r") as file:
        return json.load(file)

def save_tasks(tasks):
    with open(FILE_NAME, "w") as file:
        json.dump(tasks, file, indent=4)

def add_task(task):
    tasks = load_tasks()
    tasks.append({"task": task, "done": False})
    save_tasks(tasks)
    print(f'Tugas "{task}" berhasil ditambahkan!')

def list_tasks():
    tasks = load_tasks()
    if not tasks:
        print("Belum ada tugas.")
        return
    for idx, t in enumerate(tasks, 1):
        status = "✔" if t["done"] else "✘"
        print(f"{idx}. [{status}] {t['task']}")

def mark_done(index):
    tasks = load_tasks()
    if 0 < index <= len(tasks):
        tasks[index - 1]["done"] = True
        save_tasks(tasks)
        print(f'Tugas nomor {index} ditandai selesai.')
    else:
        print("Indeks tidak valid.")

def delete_task(index):
    tasks = load_tasks()
    if 0 < index <= len(tasks):
        removed = tasks.pop(index - 1)
        save_tasks(tasks)
        print(f'Tugas "{removed["task"]}" dihapus.')
    else:
        print("Indeks tidak valid.")

def main():
    while True:
        print("\nTo-Do List Sederhana")
        print("1. Tambah Tugas")
        print("2. Tampilkan Tugas")
        print("3. Tandai Selesai")
        print("4. Hapus Tugas")
        print("5. Keluar")
        choice = input("Pilih menu (1-5): ")

        if choice == "1":
            task = input("Masukkan nama tugas: ")
            add_task(task)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks()
            index = int(input("Nomor tugas yang selesai: "))
            mark_done(index)
        elif choice == "4":
            list_tasks()
            index = int(input("Nomor tugas yang akan dihapus: "))
            delete_task(index)
        elif choice == "5":
            print("Sampai jumpa!")
            break
        else:
            print("Pilihan tidak valid.")

if __name__ == "__main__":
    main()
